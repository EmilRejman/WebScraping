[
  "test_ex2_class_pytest.py::TestEx2Class::test_get_data_from_url_with_ok_status_code",
  "test_ex2_class_unittest.py::TestUserPostParser::test_add_posts_argument_url",
  "test_ex2_class_unittest.py::TestUserPostParser::test_add_posts_argument_url_empty",
  "test_ex2_class_unittest.py::TestUserPostParser::test_add_posts_no_url",
  "test_ex2_class_unittest.py::TestUserPostParser::test_add_posts_self_url",
  "test_ex2_class_unittest.py::TestUserPostParser::test_add_users_argument_url",
  "test_ex2_class_unittest.py::TestUserPostParser::test_add_users_no_urls",
  "test_ex2_class_unittest.py::TestUserPostParser::test_add_users_self_url",
  "test_ex2_class_unittest.py::TestUserPostParser::test_correct_geo_values_benedict",
  "test_ex2_class_unittest.py::TestUserPostParser::test_correct_geo_values_except",
  "test_ex2_class_unittest.py::TestUserPostParser::test_correct_geo_values_other",
  "test_ex2_class_unittest.py::TestUserPostParser::test_find_closest_user_empty_users",
  "test_ex2_class_unittest.py::TestUserPostParser::test_find_closest_user_normal_work",
  "test_ex2_class_unittest.py::TestUserPostParser::test_get_data_from_url_except_other",
  "test_ex2_class_unittest.py::TestUserPostParser::test_get_data_from_url_status_code_200",
  "test_ex2_class_unittest.py::TestUserPostParser::test_get_data_from_url_status_code_not_200",
  "test_ex2_class_unittest.py::TestUserPostParser::test_get_data_from_url_timeout",
  "test_ex2_class_unittest.py::TestUserPostParser::test_get_not_unique_title_list_correct",
  "test_ex2_class_unittest.py::TestUserPostParser::test_get_not_unique_title_list_no_users",
  "test_ex2_class_unittest.py::TestUserPostParser::test_number_of_posts_of_users_no_posts",
  "test_ex2_class_unittest.py::TestUserPostParser::test_number_of_posts_of_users_no_users",
  "test_ex2_class_unittest.py::TestUserPostParser::test_number_of_posts_of_users_post",
  "test_ex2_class_unittest.py::TestUserPostParser::test_parse_users_posts_correct",
  "test_ex2_class_unittest.py::TestUserPostParser::test_parse_users_posts_incorrect",
  "test_ex2_class_unittest.py::TestUserPostParser::test_remove_repeated_posts_single_post",
  "test_ex2_class_unittest.py::TestUserPostParser::test_remove_repeated_posts_tripled_post",
  "test_ex2_class_unittest.py::TestUserPostParser::test_remove_repeated_users_single_user",
  "test_ex2_class_unittest.py::TestUserPostParser::test_remove_repeated_users_tripled_users",
  "test_ex2_class.py::TestEx2Class::test_get_data_from_url_with_ok_status_code",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_data_from_url_with_nok_status_code",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_data_from_url_with_Timout_except",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_data_from_url_with_except[Timeout]",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_data_from_url_with_except[RequestException]",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_data_from_url_with_except",
  "test_ex2_class_pytest.py::TestEx2Class::test_correct_geo_values",
  "test_ex2_class_pytest.py::TestEx2Class::test_correct_geo_values_users_not_benedict",
  "test_ex2_class_pytest.py::TestEx2Class::test_correct_geo_values_are_invalid",
  "test_ex2_class_pytest.py::TestEx2Class::test_correct_geo_values_correct",
  "test_ex2_class_pytest.py::TestEx2Class::test_parse_users_with_posts",
  "test_ex2_class_pytest.py::TestEx2Class::test_parse_users_with_posts_incorrect[no_users]",
  "test_ex2_class_pytest.py::TestEx2Class::test_parse_users_with_posts_incorrect[no_posts]",
  "test_ex2_class_pytest.py::TestEx2Class::test_parse_users_with_posts_incorrect[posts_None]",
  "test_ex2_class_pytest.py::TestEx2Class::test_number_of_posts_of_users_no_users",
  "test_ex2_class_pytest.py::TestEx2Class::test_number_of_posts_of_users_no_posts",
  "test_ex2_class_pytest.py::TestEx2Class::test_number_of_posts_of_users_no_posts[False-posts0]",
  "test_ex2_class_pytest.py::TestEx2Class::test_number_of_posts_of_users_no_posts[False-None]",
  "test_ex2_class_pytest.py::TestEx2Class::test_number_of_posts_of_users_no_posts[True-None]",
  "test_ex2_class_pytest.py::TestEx2Class::test_number_of_posts_of_users_one_post",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_not_unique_title_list_correct[one_post]",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_not_unique_title_list_correct[two_posts]",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_not_unique_title_list_correct[one_post-one_post]",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_not_unique_title_list_correct[two_posts-two_posts]",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_not_unique_title_list_correct[one_post-none]",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_not_unique_title_list_correct[two_posts-post]",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_not_unique_title_list_correct[three_posts-post]",
  "test_ex2_class_pytest.py::TestEx2Class::test_get_not_unique_title_list_no_user",
  "test_ex2_class_pytest.py::TestEx2Class::test_find_closest_user_empty_users",
  "test_ex2_class_pytest.py::TestEx2Class::test_find_closest_user_normal_work[10.001]",
  "test_ex2_class_pytest.py::TestEx2Class::test_find_closest_user_normal_work[11.0]",
  "test_ex2_class_pytest.py::TestEx2Class::test_find_closest_user_normal_work[-11.0]",
  "test_ex2_class_pytest.py::TestEx2Class::test_find_closest_user_normal_work[-10.001]",
  "test_ex2_class_pytest.py::TestEx2Class::test_add_users_no_urls",
  "test_ex2_class_pytest.py::TestEx2Class::test_add_users_argument_url",
  "test_ex2_class_pytest.py::TestEx2Class::test_add_users_self_url",
  "test_ex2_class_pytest.py::TestEx2Class::test_add_posts_no_url",
  "test_ex2_class_pytest.py::TestEx2Class::test_add_posts_argument_url",
  "test_ex2_class_pytest.py::TestEx2Class::test_add_posts_argument_url_empty",
  "test_ex2_class_pytest.py::TestEx2Class::test_add_posts_self_url",
  "test_ex2_class_pytest.py::TestEx2Class::test_remove_repeated_users[single_user]",
  "test_ex2_class_pytest.py::TestEx2Class::test_remove_repeated_users[many_users]",
  "test_ex2_class_pytest.py::TestEx2Class::test_remove_repeated_posts[one_post]",
  "test_ex2_class_pytest.py::TestEx2Class::test_remove_repeated_posts[two_posts]",
  "test_ex2_class_pytest.py::TestEx2Class::test_remove_repeated_posts[three_posts]"
]